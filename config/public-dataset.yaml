---

#############################################################################################
# This is a config file example to process public 1000 Genomes dataset.
# All data files and resources are here: s3://wes-qc-data/test_data_from_1000_genomes_v2
# To download it to sanger farm, use s3cmd command.
#############################################################################################

# - You can insert a variable in the string value via '{}'. For example,
#   'foo {var_name} baz' with `var_name: bar` will render to 'foo bar baz'.
#
# - If a config field ends with 'dir' or 'file', then parser will consider
#   this field as a path and normalize it, thus removing double slashes (foo//bar -> foo/bar)
#   and redundand dots (foo/./bar -> foo/bar).
#
# - Note that string quotes are MANDATORY if using cvars.
#   That is, variable should be used only inside an explicit string.
#   Curly braces outside a string will break the YAML parser.
#
# - You can use dot-separated name of any config field as a variable name like this:
#   a:
#     a1: bar
#     a2: baz
#   b: 'foo {a.a1} {a.a2}' (will render to 'foo bar baz')
#
# - Special variables from 'cvars' list will be replaced with field
#   they are referring to. For example, '{mtdir}/gatk_unprocessed.mt' is
#   equivalent to '{general.matrixtables_dir}/gatk_unprocessed.mt'
#
# - Parser can only insert variables that were already defined.
#   You can't use a variable that will be defined further down the config.

# TODO: custom yaml type for paths
# TODO: ensure strict variable substitution, from top to bottom of the config
# TODO: add testcases for cvars, for order of variables, for nested variables
cvars:
  dataset: general.dataset_name
  dataroot: general.data_root
  tmpdir: general.tmp_dir
  anndir: general.annotation_dir
  metadir: general.metadata_dir
  mtdir: general.matrixtables_dir
  resdir: general.resource_dir
  1kg_resdir: general.onekg_resource_dir
  pltdir: general.plots_dir
  traindir: general.training_sets_dir
  rfdir: general.var_qc_rf_dir
  vcf_export_dir: general.vcf_export_dir

general:
  # Dataset name - the root folder for all analysis files
  # Also used for the naming of tables, plots, etc
  dataset_name: 'public-dataset'

  # Dataset root directory - to use in folder paths
  data_root: '/lustre/scratch126/teams/hgi/gz3/{general.dataset_name}'

  tmp_dir: 'file://{general.data_root}/tmp/' # output
  #tmp_dir: '/shared' # Without file:// prefix Hail will use HDFS on the spark master, e.g. hdfs://spark-master:9820/shared
  # To use local temp dir you need to specify it with 'file://' prefix
  # tmp_dir: 'file://{general.data_root}/tmp'
  metadata_dir: '{general.data_root}/metadata/' # input
  annotation_dir: '{general.data_root}/annotations/'
  matrixtables_dir: '{general.data_root}/matrixtables/'
  resource_dir: '{general.data_root}/resources/'
  onekg_resource_dir: '{general.resource_dir}/mini_1000G/'
  plots_dir: '{general.data_root}/plots/'
  training_sets_dir: '{general.data_root}/training_sets/' # input
  var_qc_rf_dir: '{general.data_root}/variant_qc_random_forest/' # output
  vcf_export_dir: '{general.data_root}/vcf_afterqc_export/'
  # random forest model ID is generated during step3.3, catch the parameter `runhash` and place it here
  rf_model_id: 'test-run-model'

step0:
  # --- Step 0.1 --- #
  create_1kg_mt:
    indir: '{1kg_resdir}'
    vcfheader: '{1kg_resdir}/header_20201028.txt' # not available for the test data, this parameter is ignored
    kg_pop_file: '{resdir}/igsr_samples.tsv'
    kg_unprocessed: '{mtdir}/kg_unprocessed.mt'
    pruned_kg_file: '{mtdir}/kg_pruned_ld.mt'
    long_range_ld_file: '{resdir}/long_ld_regions.hg38.bed'
    relatedness_ht_file: '{mtdir}/kg_relatedness.ht'
    samples_to_remove_file: '{mtdir}/kg_related_samples_to_remove.ht'
    scores_file: '{mtdir}/kg_pruned.pca_scores.ht'

    kg_out_mt: '{mtdir}/kg_wes_regions.mt' # output
    call_rate_threshold: 0.99
    af_threshold: 0.05
    hwe_threshold: 0.00001 #1e-5
    r2_threshold: 0.2
    hl_pc_related_kwargs:
      min_individual_maf: 0.05
      block_size: 4096
      min_kinship: 0.05
      statistics: "kin2"
    pca_components: 10
    kin_threshold: 0.125

  generate_truthset_ht:
    omni: '{traindir}/1000G_omni2.5.hg38.ht'
    mills: '{traindir}/Mills_and_1000G_gold_standard.indels.hg38.ht'
    thousand_genomes: '{traindir}/1000G_phase1.snps.high_confidence.hg38.ht'
    hapmap: '{traindir}/hapmap_3.3.hg38.ht'
    truth_ht_outfile: '{mtdir}/truthset_table.ht'

step1:
  # --- Step 1.1 --- #
  gatk_vcf_header_infile:
  gatk_vcf_indir: '{general.data_root}/test_data_from_1000_genomes/'
  gatk_mt_outfile: '{mtdir}/gatk_unprocessed.mt'

  # --- Step 1.2 --- #
  validate_verifybamid:
    verifybamid_selfsm: '{metadir}/test_data_from_1000_genomes.verify_bam_id_result.selfSM.tsv'  # Set to null if you don't have freemix data
    verifybamid_plot: '{pltdir}/freemix_validation.html'
    samples_failing_freemix_tsv: '{anndir}/samples_failing_freemix.tsv'
    freemix_treshold: 0.05

  sex_metadata_file: '{metadir}/mlwh_sample_and_sex.txt'
  mt_metadata_annotated: '{mtdir}/mt_metadata_annotated.mt'

  validate_gtcheck:
    wes_microarray_mapping: '{metadir}/testdata_1000genomes_v2.microarray_mapping.tsv' # Set to null if you don't have microarray data
    microarray_ids: '{metadir}/testdata_1000genomes_v2.samples_microarray.txt'
    gtcheck_report: '{metadir}/testdata_1000genomes_v2.gtcheck.txt'
    gtcheck_results_folder: '{anndir}/gtcheck'
    mt_gtcheck_validated: '{mtdir}/mt_gtcheck_validated.mt'

    wes_id_col: 'WES_ID'
    microarray_id_col: 'Microarray_ID'
    gtcheck_score_threshold: 0.2

  plot_mutation_spectra_preqc:
    mut_spectra_path: '{anndir}/mutation_spectra_preqc.tsv'
    mut_spectra_plot_path: '{pltdir}/mutation_spectra_preqc.html'
    iqr_multiplier: 1.5
    width: 800
    height: 600

step2:
  # --- Step 2.1 --- #
  sex_annotation_hard_filters:
    n_alt_alleles_threshold: 0.001
    defined_gt_frac_threshold: 0.99

  impute_sex:
    sex_ht_outfile: '{anndir}/sex_annotated.sex_check.tsv.bgz'
    sex_mt_outfile: '{mtdir}/mt_sex_annotated.mt'
    hail_impute_sex_params:  # https://hail.is/docs/0.2/methods/genetics.html#hail.methods.impute_sex
      female_threshold: 0.5
      male_threshold: 0.8
      aaf_threshold: 0.05

  f_stat_outliers:
    fstat_outliers_report_file: '{anndir}/sex_annotation_f_stat_outliers.tsv' # output
    fstat_low: 0.2
    fstat_high: 0.8

  sex_inconsistencies:
    conflicting_sex_report_file: '{anndir}/conflicting_sex.tsv' # output

  # --- Step 2.2 --- #
  prune:
    pruned_mt_file: '{mtdir}/mt_ldpruned.mt' # output
    ld_prune_args:
      r2: 0.2
      # bp_window_size:
      # memory_per_core:
      # keep_higher_maf:
      # block_size:

  prune_pc_relate:
    scores_file: '{mtdir}/mt_pruned.pca_scores.ht' # output
    samples_to_remove_file: '{mtdir}/mt_related_samples_to_remove.ht' # output
    samples_to_remove_tsv: '{anndir}/related_samples_to_remove.tsv' # output in the TSV table
    pca_components: 3
    pc_relate_args: # https://hail.is/docs/0.2/methods/relatedness.html#hail.methods.pc_relate
      min_individual_maf: 0.05
      block_size: 4096
      min_kinship: 0.05
      statistics: 'kin2'
      # k:
      # include_self_kinship:
    relatedness_column: 'kin'
    relatedness_threshold: 0.125
    relatedness_outfile: '{anndir}/relatedness.tsv.gz'
    relatedness_plotfile: '{pltdir}/relatedness_plot.html'

  prune_plot_pca:
    plink_outfile: '{mtdir}/mt_unrelated.plink'
    pca_components: 4
    pca_scores_file: '{mtdir}/mt_pca_scores.ht' # output
    pca_loadings_file: '{mtdir}/mt_pca_loadings.ht' # output
    pca_mt_file: '{mtdir}/mt_pca.mt' # output
    plot_outfile: '{pltdir}/pca.html' # output










  # --- Step 2.3 --- #
  merge_1kg_and_ldprune:
    long_range_ld_file: '{resdir}/long_ld_regions.hg38.bed'
    merged_filtered_mt_outfile: '{mtdir}/merged_with_1kg_filtered.mt'
    call_rate_threshold: 0.99
    af_threshold: 0.05
    hwe_threshold: 0.00001 #1e-5
    r2_threshold: 0.2
    filtered_and_pruned_mt_outfile: '{mtdir}/merged_with_1kg_filtered_ldpruned.mt'

  pop_pca:
    pca_1kg_scores_file: '{mtdir}/pop_pca_1kg_scores.ht'
    pca_1kg_loadings_file: '{mtdir}/pop_pca_1kg_loadings.ht'
    pca_1kg_evals_file: '{anndir}/pop_pca_1kg_evals.tsv'
    pca_union_scores_file: '{mtdir}/pop_pca_union_scores.ht'
    pca_components: 4

  plot_pop_pca:
    pca_components: 3
    pop_pca_1kg_graph: '{pltdir}/pop_pca_scores_1kg.html'
    pop_pca_union_graph: '{pltdir}/pop_pca_scores_union.html'

  predict_pops:
    gnomad_pc_n_estimators: 100
    gnomad_prop_train: 0.8
    gnomad_min_prob: 0.5
    pop_ht_outfile: '{mtdir}/pop_assignments.ht'
    pop_ht_out_tsv: '{mtdir}/pop_assignments.tsv'

  plot_pop_pca_assigned:
    pca_components: 3
    pop_assigned_pca_dataset_graph: '{pltdir}/pop_pca_assigned_scores_dataset.html'
    pop_assigned_pca_union_graph: '{pltdir}/pop_pca_assigned_scores_union.html'


  # --- Step 2.4 --- #
  # func name: annotate_mt
  annotate_with_pop:
    annotated_mt_file: '{mtdir}/gatk_unprocessed_with_pop.mt' # output

  stratified_sample_qc:
    mt_qc_outfile: '{mtdir}/mt_pops_sampleqc.mt' # output
    ht_qc_cols_outfile: '{mtdir}/mt_pops_sampleqc.ht' # output
    qc_filter_file: '{mtdir}/mt_pops_QC_filters.ht' # output
    min_depth: 20
    min_genotype_quality: 20
    min_vaf: 0.25
    # Additional parameters to pass to gnomAD sampleQC function:
    # https://broadinstitute.github.io/gnomad_methods/api_reference/sample_qc/filtering.html#gnomad.sample_qc.filtering.compute_stratified_metrics_filter
    compute_stratified_metrics_filter_args:
      lower_threshold: 4.0
      upper_threshold: 4.0
    output_text_file: '{anndir}/sample_qc_by_pop.tsv.bgz' # output
    output_globals_json_file: '{anndir}/sample_qc_by_pop.globals.json' # output

  plot_sample_qc_metrics:
    n_bins: 20
    plot_outdir: '{pltdir}/sample_qc_metrics'

  # --- Step 2.5 --- #
  remove_sample_qc_fails:
    samples_failing_qc_file: '{anndir}/samples_failing_qc.tsv.bgz' # output
    sample_qc_filtered_mt_file: '{mtdir}/mt_pops_QC_filters_after_sample_qc.mt' # output


step3:
  # Parameters used in multiple functions #
  pedfile: null #'{metadir}/test_1000g_v2.triosonly.ped'

  # --- Step 3.1 --- #
  split_multi_and_var_qc:
    mtfile: '{mtdir}/mt_pops_QC_filters_after_sample_qc.mt' # gatk_broad_crams_sanger_calls.mt for non-trios mode
    varqc_mtoutfile: '{mtdir}/mt_varqc.mt'
    varqc_mtoutfile_split: '{mtdir}/mt_varqc_splitmulti.mt'

  # not used for non-trios mode
  trio_family_dnm_annotation:
    trio_mtoutfile: '{mtdir}/trios.mt'
    trio_stats_htoutfile: '{mtdir}/trio_stats.ht'
    fam_stats_htoutfile: '{mtdir}/family_stats.ht'
    fam_stats_mtoutfile: '{mtdir}/family_stats.mt'
    fam_stats_gnomad_mtoutfile: '{mtdir}/family_stats_gnomad.mt'
    gnomad_htfile: '{resdir}/gnomad.exomes.r2.1.1.sites.liftover_grch38.ht'
    dnm_htoutfile: '{mtdir}/denovo_table.ht'

  create_inbreeding_ht_with_ac_and_allele_data:
    inbreeding_htoutfile: '{mtdir}/inbreeding.ht'
    qc_ac_htoutfile: '{mtdir}/qc_ac.ht'
    allele_data_htoutfile: '{mtdir}/allele_data.ht'

  # --- Step 3.2 --- #
  create_rf_ht:
    fail_hard_filters_QD_less_than: 2
    fail_hard_filters_FS_greater_than: 60
    fail_hard_filters_MQ_less_than: 30

    truthset_file: '{mtdir}/truthset_table.ht'
    trio_stats_file: '{mtdir}/trio_stats.ht'
    allele_data_file: '{mtdir}/allele_data.ht'
    allele_counts_file: '{mtdir}/qc_ac.ht'
    inbreeding_file: '{mtdir}/inbreeding.ht'
    mtfile: '{mtdir}/mt_varqc_splitmulti.mt'
    htoutfile_rf_var_type_all_cols: '{mtdir}/ht_for_RF_by_variant_type_all_cols.ht'

  # --- Step 3.3 --- #
  rf_test_interval: chr20 # used in multiple functions
  runs_json: '{rfdir}/rf_runs.json'

  train_rf:
    input_ht_file: '{mtdir}/ht_for_RF_by_variant_type_all_cols.ht'
    gnomad_train_rf_fp_to_tp: 1.0
    gnomad_train_rf_num_trees: 500
    gnomad_train_rf_max_depth: 5

  # --- Step 3.4 --- #
  # only var_qc_rf_dir (which is CVAR) is required

  # --- Step 3.5 --- #
  add_cq_annotation:
    synonymous_file: '{resdir}/synonymous_variants.txt'

  dnm_and_family_annotation:
    dnm_htfile: '{mtdir}/denovo_table.ht'
    fam_stats_htfile: '{mtdir}/family_stats.ht'
    trio_stats_htfile: '{mtdir}/trio_stats.ht'

  transmitted_singleton_annotation:
    trio_mtfile: '{mtdir}/trios.mt'
    trio_filtered_mtfile: '{mtdir}/trios_filtered_.mt'

  annotate_gnomad:
    gnomad_htfile: '{resdir}/gnomad.exomes.r2.1.1.sites.liftover_grch38.ht'


  # --- Step 3.6 --- #
  add_rank:
    subrank_expr_de_novo_high_quality_rank: 0.9
    subrank_expr_de_novo_medium_quality_rank: 0.5

  create_binned_data_initial:
    truth_htfile: '{mtdir}/truthset_table.ht'

    high_quality_p_de_novo: 0.99
    medium_quality_p_de_novo: 0.5

    # TODO: merge these into a single parameter?
    n_trans_common_gnomad_af: 0.1
    n_untrans_common_gnomad_af: 0.1


  # --- Step 3.7 --- #
  create_plots:
    qc_plots_settings:
      mean_point_size: 4.0
      min_point_size: 1.0
      max_point_size: 16.0
      label_text_font_size: "14pt"
      title_text_font_size: "16pt"
      subtitle_text_font_size: "14pt"
      axis_axis_label_text_font_size: "16pt"
      axis_axis_label_text_font_style: "normal"
      axis_major_label_text_font_size: "14pt"


  # --- Step 3.8 --- #
  # no config parameters used

  # --- Step 3.9 --- #
  annotate_mt_with_cq_rf_score_and_bin:
    mtfile: '{mtdir}/mt_varqc_splitmulti.mt'
    cqfile: '{resdir}/all_consequences.txt'
    mtoutfile_after_varqc: '{mtdir}/mt_after_var_qc.mt'

step4:
  # --- Step 4.1 --- #
  evaluation:
    giab_vcf: '{resdir}/HG001_GRCh38_benchmark.interval.illumina.vcf.gz'
    giab_cqfile: '{resdir}/HG001_GRCh38_benchmark.all.interval.illumina.vep.info.txt'
    giab_ht_file: '{mtdir}/HG001_GRCh38_benchmark.interval.illumina.ht'
    # The ID of GIAB HG001 (NA12878) sample, if it presents in your sequencing data
    # If you don't have it, use null value instead
    # (the precision/recall calculations will be skipped in this case)
    giab_sample_id: null
    hardfilter_combinations:
      snp_bins: [ 40, 60, 80 ]
      indel_bins: [ 25, 50, 75 ]
      dp_vals: [ 5, 10 ]
      gq_vals: [ 10 ]
      ab_vals: [ 0.2 ]
      missing_vals: [ 0.5 ]
    json_dump_folder: '{anndir}/{general.rf_model_id}/json_dump'
    snp_json: '{anndir}/{general.rf_model_id}/hard_filter_evaluation.snv.json'
    snp_tsv: '{anndir}/{general.rf_model_id}/hard_filter_evaluation.snv.tsv'
    indel_json: '{anndir}/{general.rf_model_id}/hard_filter_evaluation.indel.json'
    indel_tsv: '{anndir}/{general.rf_model_id}/hard_filter_evaluation.indel.tsv'

  plot:
    snv-precision-recall: '{pltdir}/hard_filter_evaluation.snv.precision_recall.html'
    snv-TP-FP: '{pltdir}/hard_filter_evaluation.snv.tp_fp.html'
    snv-t_u_ratio-TP: '{pltdir}/hard_filter_evaluation.snv.t_u_ratio_tp.html'
    indel-precision-recall: '{pltdir}/hard_filter_evaluation.indel.precision_recall.html'
    indel-TP-FP: '{pltdir}/hard_filter_evaluation.indel.tp_fp.html'


  # --- Step 4.2 --- #
  annotate_cq_rf:
    mtfile: '{mtdir}/mt_varqc_splitmulti.mt'
    cqfile: '{resdir}/all_consequences_with_gene_and_csq.txt'

  apply_hard_filters:
    hard_filters:
      missingness: 0.5
      snp:
        relaxed:
          bin: 90
          dp: 5
          gq: 10
          ab: 0.2
        medium:
          bin: 82
          dp: 5
          gq: 10
          ab: 0.2
        stringent:
          bin: 72
          dp: 5
          gq: 15
          ab: 0.2
      indel:
        relaxed:
          bin: 72
          dp: 5
          gq: 10
          ab: 0.2
        medium:
          bin: 66
          dp: 5
          gq: 15
          ab: 0.2
        stringent:
          bin: 54
          dp: 5
          gq: 20
          ab: 0.3

  # used as an output of the whole step
  mtoutfile_annot: '{mtdir}/mt_hard_filter_combinations.mt'

  # --- Step 4.2 --- #
  annotate_gnomad:
    # mtfile: '{mtdir}/mt_after_var_qc_hard_filter_gt.mt' # used when 1-apply_hard_filters is run
    mtfile: '{mtdir}/mt_hard_filter_combinations.mt' # used when 1a-apply_hard_filters is run
    gnomad_htfile: '{resdir}/gnomad.exomes.r2.1.1.sites.liftover_grch38.ht'

  get_trans_untrans_synon_singleton_counts:
    pedfile: '{resdir}/trios.ped'

  get_counts_per_cq:
    cqfile: '{pltdir}/variant_counts_per_cq_post_qc.txt'

  get_ca_fractions:
    cafile: '{pltdir}/frac_ca_per_sample_post_qc_snv.txt'

  # --- Step 4.3a --- #
  export_vcfs_a:
    mtfile: '{mtdir}/mt_hard_filter_combinations.mt'
    vcf_output_dir: '{vcf_export_dir}/filtered_vcfs_combinations/'

  # --- Ster 4.3b --- #
  export_vcfs_b:
    mtfile: '{mtdir}/mt_hard_filter_combinations.mt'
    filtered_vcf_dir: '{vcf_export_dir}/filtered_vcfs_combinations_stringent/'

  plot_mutation_spectra_afterqc:
    mut_spectra_path: '{anndir}/mutation_spectra_afterqc.tsv'
    mut_spectra_plot_path: '{pltdir}/mutation_spectra_afterqc.html'
    iqr_multiplier: 1.5
    width: 800
    height: 600
